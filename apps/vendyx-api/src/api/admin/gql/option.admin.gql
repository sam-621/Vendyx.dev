extend type Option {
  order: Int!
}

extend type OptionValue {
  order: Int!
}

type Mutation {
  createOption(productId: ID!, input: CreateOptionInput!): Option!
  updateOption(id: ID!, input: UpdateOptionInput!): Option!
  softRemoveOption(id: ID!): Option!
  softRemoveOptionValues(ids: [ID!]!): Boolean!
}

input CreateOptionInput {
  order: Int!
  name: String!
  values: [CreateOptionValueInput!]!
}

input CreateOptionValueInput {
  order: Int!
  name: String!
}

input UpdateOptionInput {
  order: Int
  name: String
  values: [UpdateOptionValueInput!]
}

input UpdateOptionValueInput {
  """
  If pressent, the value will be updated.
  If not, the value will be created and add it to the option
  """
  id: ID
  name: String
  order: Int
}
