
type Mutation {
  createOption(input: CreateOptionInput!): OptionResult!
  updateOption(id: ID!, input: UpdateOptionInput!): OptionResult!
  removeOption(id: ID!): RemoveOptionResult!
  addOptionValues(optionId: ID!, values: [String!]!): OptionResult!
  updateOptionValues(input: [UpdateOptionValueInput!]!): UpdateOptionValueResult!
  removeOptionValues(ids: [ID!]!): OptionResult!
}

input CreateOptionInput {
  name: String!
  values: [String!]
}

input UpdateOptionInput {
  name: String
}

input UpdateOptionValueInput {
  id: ID!,
  value: String!
}

" Results "
type OptionResult {
  option: Option
  apiErrors: [OptionErrorResult!]!
}

type RemoveOptionResult {
  success: Boolean!
  apiErrors: [OptionErrorResult!]!
}

type UpdateOptionValueResult {
  success: Boolean!
  apiErrors: [OptionErrorResult!]!
}

type OptionErrorResult {
  code: OptionErrorCode!
  message: String!
}

" Utils "
enum OptionErrorCode {
  DUPLICATED_OPTION_VALUES
  OPTION_NOT_FOUND
  OPTION_VALUE_NOT_FOUND
}