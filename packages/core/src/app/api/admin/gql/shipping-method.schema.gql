extend type ShippingMethod {
  priceCalculatorCode: String!
}

type ShippingMethodList implements List {
  items: [ShippingMethod!]!
  count: Int!
}

type Mutation {
  createShippingMethod(zoneId: ID!, input: CreateShippingMethodInput!): ShippingMethodResult!
  updateShippingMethod(id: ID!, input: UpdateShippingMethodInput!): ShippingMethodResult!
  removeShippingMethod(id: ID!): RemoveShippingMethodResult!
}

input CreateShippingMethodInput {
  name: String!
  priceCalculatorCode: String!
  description: String
  enabled: Boolean
}

input UpdateShippingMethodInput {
  name: String
  description: String
  priceCalculatorCode: String
  enabled: Boolean
}

type ShippingMethodResult {
  shippingMethod: ShippingMethod
  apiErrors: [ShippingMethodErrorResult!]!
}

type RemoveShippingMethodResult {
  success: Boolean
  apiErrors: [ShippingMethodErrorResult!]!
}

type ShippingMethodErrorResult {
  code: ShippingMethodErrorCode!
  message: String!
}

enum ShippingMethodErrorCode {
  ZONE_NOT_FOUND
  SHIPPING_METHOD_NOT_FOUND
  SHIPPING_PRICE_CALCULATOR_NOT_FOUND
}
